version: "2.4"
services:
  rawconsumer:
    image: udacitywrighty/kube-test-consumer:0.8
    restart: on-failure
    depends_on:
      - "queue"
      - "db"

  rawproducer:
    image: udacitywrighty/kube-test-data_producer:0.6
    restart: on-failure
    depends_on:
      - "queue"
      - "db"

  cleaner:
    image: udacitywrighty/kube-test-cleaner:0.3
    restart: on-failure
    depends_on:
      - "queue"
      - "db"

  cleanconsumer:
    image: udacitywrighty/kube-test-clean_consumer:0.1
    restart: on-failure
    depends_on:
      - "queue"
      - "db"

  queue:
    image: rabbitmq:3-management
    ports:
      - "15671:15671"
      - "15672:15672"
    hostname: queue
    container_name: queue
    mem_limit: 1gb
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password

  db:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.5.4
    hostname: db
    container_name: db
    mem_limit: 1gb
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - "discovery.type=single-node"

  kibana:
    image: docker.elastic.co/kibana/kibana:6.5.4
    container_name: kibana
    ports:
      - "5601:5601"
    mem_limit: 500m
    environment:
      ELASTICSEARCH_URL: http://db:9200
    depends_on:
      - "db"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
    depends_on:
      - cadvisor
  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    ports:
      - 8080:8080
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      - queue
      - db
      - kibana
